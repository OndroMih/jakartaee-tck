<?xml version="1.0"?>
<!--

    Copyright (c) 2018, 2020 Oracle and/or its affiliates. All rights reserved.

    This program and the accompanying materials are made available under the
    terms of the Eclipse Public License v. 2.0, which is available at
    http://www.eclipse.org/legal/epl-2.0.

    This Source Code may also be made available under the following Secondary
    Licenses when the conditions for such availability set forth in the
    Eclipse Public License v. 2.0 are satisfied: GNU General Public License,
    version 2 with the GNU Classpath Exception, which is available at
    https://www.gnu.org/software/classpath/license.html.

    SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0

-->

<project name="failure" basedir="." default="usage">
    
    <!-- Reuse ant targets defined in jaxws -->
    <import file="../../../../../../../../../src/com/sun/ts/tests/jaxws/common/xml/common.xml"/>
    
    <property name="current.dir" value="${basedir}"/>
    <property name="app.name" value="FailureHello"/>
    <property name="client.app.name" value="FailureHelloClnt"/>
    <property name="service.names" value="FailureHelloService" />
    <property name="sei.names" value="FailureHello" />
    <property name="port.name" value="FailureHello" />
    <property name="wsdl.filename" value="FailureHelloService.wsdl"/>
    <property name="impl.class" value="com.sun.ts.tests.jaspic.spi.authstatus.failure.FailureHelloImpl"/>
    
    <property name="wsdl.file" value="${src.dir}/${pkg.dir}/${wsdl.filename}"/>
    <property name="wsdl.location" value="META-INF/wsdl/${wsdl.filename}"/>
    <property name="impl.classes" value="${pkg.dir}/FailureHelloImpl.class"/>
    
    
    <target name="compile" >
        <ts.javac/>
    </target>
    
    <target name="package" depends="packageendpoint, packageclient"/>
    
    <target name="generate_server">
        <ts.javac includes="${pkg.dir}/FailureHelloImpl.java"/>
        <antcall target="do_java2wsdl_generate_server"/>
    </target>
    
    <target name="filter-wsdl-file" >
        <copy file="${src.dir}/${pkg.dir}/${wsdl.filename}"
              tofile="${src.dir}/${pkg.dir}/${wsdl.filename}.orig" overwrite="true">
        </copy>
        
        <delete file="${src.dir}/${pkg.dir}/${wsdl.filename}" />
        
        <copy file="${src.dir}/${pkg.dir}/${wsdl.filename}.orig"
              tofile="${src.dir}/${pkg.dir}/${wsdl.filename}" overwrite="true">
            <filterset begintoken="REPLACE" endtoken="ACTUAL_URL">
                <filter token="_WITH_" 
                        value="http://${orb.host}:${webServerPort}/FailureHelloService/FailureHello"/>
            </filterset>
        </copy>
        
        <delete file="${src.dir}/${pkg.dir}/${wsdl.filename}.orig" />
    </target>
    
    <target name="generate_client" depends="do_wsdl2java_generate_client, compile"/>
    
    <target name="build" depends="package"/>
    
    <target name="packageendpoint" depends="generate_server, checkPlatformMode">
        <ts.war archivename="${app.name}" descriptor="jakartaEE.web.xml">
            <zipfileset dir="${src.dir}/${pkg.dir}" includes="${wsdl.xsd.files}"  prefix="WEB-INF/wsdl"/>
            <zipfileset dir="${src.dir}/${pkg.dir}" includes="${jaxws.runtime.xml}" prefix="WEB-INF"/>
            <zipfileset dir="${class.dir}" includes="${impl.classes},
                        ${portable.classes},
                        ${jaxws.common.classes}"
                        excludes="${client.classes}" prefix="WEB-INF/classes"/>
        </ts.war>
        <if>
            <not>
                <isset  property="isStandAlone" />
            </not>
            <then>
                <ts.ear archivename="${app.name}"  includedefaultfiles="false" >
                    <zipfileset dir="${dist.dir}/${pkg.dir}" includes="${app.name}_web.war" />
                </ts.ear>
            </then>
        </if>
    </target>
    
    <target name="packageclient" depends="generate_client, checkPlatformMode">

        <if>
            <not>
                <isset  property="isStandAlone" />
            </not>
            <then>
                <ts.clientjar archivename="${client.app.name}"
                              mainclass="com.sun.ts.tests.jaspic.spi.authstatus.failure.Client">
                    <zipfileset dir="${src.dir}/${pkg.dir}" includes="${wsdl.xsd.files}"  prefix="META-INF/wsdl" />
                    <zipfileset dir="${class.dir}" includes="
                                ${pkg.dir}/FailureHello.class,
                                ${pkg.dir}/FailureHelloService.class,
                                com/sun/ts/tests/jaspic/util/LogFileProcessor.class,
                                com/sun/ts/tests/jaspic/util/LogRecordEntry.class,
                                ${pkg.dir}/Client.class" />
                </ts.clientjar>
                <ts.ear archivename="${client.app.name}"  includedefaultfiles="false" >
                    <zipfileset dir="${dist.dir}/${pkg.dir}" includes="${client.app.name}_client.jar" />
                </ts.ear>
            </then>
        </if>
    </target>
    
    
    <target name="checkPlatformMode" >
        <condition property="isStandAlone">
            <equals arg1="${platform.mode}" arg2="standalone" casesensitive="true" trim="true"/>
        </condition>
    </target>
    
    <target name="runclient" depends="checkPlatformMode">
        <antcall target="runclientJavaEE" />
        <antcall target="runclientStandAlone" />
    </target>
    
    <target name="runclientJavaEE" unless="isStandAlone">
        <ant antfile="build.xml" dir="${bin.dir}" target="runclient" />
    </target>
    
    <target name="runclientStandAlone" if="isStandAlone">
        <antcall target="deploy" />
        <ant antfile="build.xml" dir="${bin.dir}" target="runclient" />
        <antcall target="undeploy" />
    </target>
    
    <target name="clean">
        <ts.clean/>
    </target>
    
</project>
