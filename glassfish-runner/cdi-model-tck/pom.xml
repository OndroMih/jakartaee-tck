<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <name>CDI Lite Language Model TCK Runner</name>
  <groupId>org.jboss.weld</groupId>
  <artifactId>lang-model-tck-runner</artifactId>
  <version>4.0.5-SNAPSHOT</version>

  <properties>
    <maven.compiler.source>11</maven.compiler.source>
    <maven.compiler.target>11</maven.compiler.target>
    <cdi.tck-4-0.version>4.0.5</cdi.tck-4-0.version>
    <weld.version>5.0.0.SP2</weld.version>
    <glassfish.version>7.0.0-M10</glassfish.version>
    <glassfish.root>${project.build.directory}</glassfish.root>
    <glassfish.home>${glassfish.root}/glassfish7</glassfish.home>

  </properties>

  <repositories>
    <repository>
      <id>jakarta-snapshots</id>
      <url>https://jakarta.oss.sonatype.org/content/repositories/staging/</url>
    </repository>
  </repositories>


  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>jakarta.enterprise</groupId>
        <artifactId>cdi-tck-lang-model</artifactId>
        <version>${cdi.tck-4-0.version}</version>
      </dependency>
      <dependency>
        <groupId>org.jboss.weld</groupId>
        <artifactId>weld-lite-extension-translator</artifactId>
        <version>${weld.version}</version>
      </dependency>
      <dependency>
        <groupId>org.jboss.weld</groupId>
        <artifactId>weld-core-test-common</artifactId>
        <version>${weld.version}</version>
      </dependency>
      <dependency>
        <groupId>org.jboss.weld</groupId>
        <artifactId>weld-core-impl</artifactId>
        <version>${weld.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <!-- we need to depend on the impl to make sure this module is built after weld-lite-extension-translator -->
    <dependency>
      <groupId>org.jboss.weld</groupId>
      <artifactId>weld-lite-extension-translator</artifactId>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.13.2</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.jboss.arquillian.junit</groupId>
      <artifactId>arquillian-junit-container</artifactId>
      <version>1.7.0.Alpha10</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.jboss.weld</groupId>
      <artifactId>weld-core-test-common</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.jboss.weld</groupId>
      <artifactId>weld-core-impl</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>jakarta.enterprise</groupId>
      <artifactId>cdi-tck-lang-model</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.jboss.weld.module</groupId>
      <artifactId>weld-web</artifactId>
      <version>${weld.version}</version>
    </dependency>


    <dependency>
      <groupId>jakarta.enterprise</groupId>
      <artifactId>cdi-tck-api</artifactId>
      <version>${cdi.tck-4-0.version}</version>
      <exclusions>
        <exclusion>
          <groupId>jakarta.el</groupId>
          <artifactId>jakarta.el-api</artifactId>
        </exclusion>
      </exclusions>
    </dependency>


    <dependency>
      <groupId>commons-lang</groupId>
      <artifactId>commons-lang</artifactId>
      <version>2.6</version>
      <scope>test</scope>
    </dependency>

    <!--
        The Arquillian connector that starts GlassFish and deploys archives to it.
    -->
    <dependency>
      <groupId>org.omnifaces.arquillian</groupId>
      <artifactId>arquillian-glassfish-server-managed</artifactId>
      <version>1.2</version>
    </dependency>

  </dependencies>


  <build>
    <plugins>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.10.1</version>
        <configuration>
          <!-- Disable annotation processor for test sources -->
          <testCompilerArgument>-proc:none</testCompilerArgument>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-jar-plugin</artifactId>
        <version>3.2.2</version>
        <executions>
          <execution>
            <goals>
              <goal>test-jar</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/dependency/lib</outputDirectory>
              <archive>
                <manifest>
                  <addClasspath>false</addClasspath>
                </manifest>
              </archive>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>3.3.0</version>
        <executions>
          <execution>
            <id>unpack-glassfish</id>
            <phase>test-compile</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <markersDirectory>${glassfish.root}/dependency-maven-plugin-markers</markersDirectory>
              <artifactItems>
                <artifactItem>
                  <groupId>org.glassfish.main.distributions</groupId>
                  <artifactId>${glassfish-artifact-id}</artifactId>
                  <version>${glassfish.version}</version>
                  <type>zip</type>
                  <overWrite>true</overWrite>
                  <outputDirectory>${glassfish.root}</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-report-plugin</artifactId>
        <version>3.0.0-M7</version>
        <executions>
          <execution>
            <id>generate-test-report</id>
            <phase>verify</phase>
            <goals>
              <goal>report-only</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <outputDirectory>${project.build.directory}/surefire-reports</outputDirectory>
          <outputName>test-report</outputName>
        </configuration>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>javaee-full</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <properties>
        <glassfish-artifact-id>glassfish</glassfish-artifact-id>
      </properties>
    </profile>
    <profile>
      <id>webprofile</id>
      <properties>
        <glassfish-artifact-id>web</glassfish-artifact-id>
      </properties>
    </profile>
  </profiles>

</project>
